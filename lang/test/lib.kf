// Module for natural numbers.
//
// Natural in Kaffee stands for unsigned pointer-sized integer type.
module Nat = struct
    type t = Internal.Nat.t;
    let add = Internal.Nat.add;

    // @integer stands for spelling of integer literal.
    //
    // When this defition is in scope, integer literals resolve to this type.
    type @integer = t; 

    // @plus stands for spelling of binary `+` operator literal.
    //
    // When this definition is in scope, `+` resolves to call to this function.
    let @plus x y = add x y;
end


// Examples of different type definitions in Kaffee.
module Collections = struct
    // Generic pair
    type pair ('a, 'b) = 'a * 'b;

    // Type alias for array index
    type idx = Nat.t;
end
